"""Add connections and metadata tables

Revision ID: 7cf6f6fb336f
Revises: 
Create Date: 2025-10-03 21:47:58.413784

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7cf6f6fb336f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('database_type', sa.Enum('postgresql', 'mysql', 'sqlite', 'mssql', 'oracle', name='databasetype'), nullable=False),
    sa.Column('host', sa.String(length=255), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('database', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=500), nullable=False),
    sa.Column('db_schema', sa.String(length=255), nullable=True),
    sa.Column('ssl_enabled', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'error', 'testing', name='connectionstatus'), nullable=False),
    sa.Column('last_introspection', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discovered_tables',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('connection_id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=255), nullable=False),
    sa.Column('schema_name', sa.String(length=255), nullable=True),
    sa.Column('table_type', sa.String(length=50), nullable=False),
    sa.Column('row_count', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['connection_id'], ['connections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discovered_tables_connection_id'), 'discovered_tables', ['connection_id'], unique=False)
    op.create_table('discovered_columns',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('column_name', sa.String(length=255), nullable=False),
    sa.Column('data_type', sa.String(length=100), nullable=False),
    sa.Column('is_nullable', sa.Boolean(), nullable=False),
    sa.Column('is_primary_key', sa.Boolean(), nullable=False),
    sa.Column('is_foreign_key', sa.Boolean(), nullable=False),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('max_length', sa.Integer(), nullable=True),
    sa.Column('precision', sa.Integer(), nullable=True),
    sa.Column('scale', sa.Integer(), nullable=True),
    sa.Column('ordinal_position', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['discovered_tables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discovered_columns_table_id'), 'discovered_columns', ['table_id'], unique=False)
    op.create_table('discovered_relations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_table_id', sa.Integer(), nullable=False),
    sa.Column('to_table_id', sa.Integer(), nullable=False),
    sa.Column('from_column_id', sa.Integer(), nullable=False),
    sa.Column('to_column_id', sa.Integer(), nullable=False),
    sa.Column('relation_type', sa.String(length=50), nullable=False),
    sa.Column('constraint_name', sa.String(length=255), nullable=True),
    sa.Column('on_delete', sa.String(length=50), nullable=False),
    sa.Column('on_update', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_column_id'], ['discovered_columns.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_table_id'], ['discovered_tables.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_column_id'], ['discovered_columns.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_table_id'], ['discovered_tables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discovered_relations_from_table_id'), 'discovered_relations', ['from_table_id'], unique=False)
    op.create_index(op.f('ix_discovered_relations_to_table_id'), 'discovered_relations', ['to_table_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_discovered_relations_to_table_id'), table_name='discovered_relations')
    op.drop_index(op.f('ix_discovered_relations_from_table_id'), table_name='discovered_relations')
    op.drop_table('discovered_relations')
    op.drop_index(op.f('ix_discovered_columns_table_id'), table_name='discovered_columns')
    op.drop_table('discovered_columns')
    op.drop_index(op.f('ix_discovered_tables_connection_id'), table_name='discovered_tables')
    op.drop_table('discovered_tables')
    op.drop_table('connections')
    # ### end Alembic commands ###
